import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
    id "org.openapi.generator" version "7.3.0"
}

group = 'emented'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation('org.springframework.boot:spring-boot-starter-hateoas') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.10.RELEASE'
    implementation 'com.orbitz.consul:consul-client:1.5.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.1.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-config:4.1.1'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation("org.apache.httpcomponents.client5:httpclient5:5.2.1")

    implementation 'com.unboundid:unboundid-ldapsdk:7.0.1'


    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

openApiGenerate {
    generatorName.set("kotlin-spring")
    inputSpecRootDirectory.set("${project.rootDir}/src/main/resources/api")
    outputDir.set("${buildDir.path}/generated")
    additionalProperties.set([
            "serializationLibrary"             : "jackson",
            "apiPackage"                       : "emented.api",
            "modelPackage"                     : "emented.model",
            "invokerPackage"                   : "emented",
            "useSpringBoot3"                   : true,
            "idea"                             : true,
            "delegatePattern"                  : true,
            "useTags"                          : true,
            "sortModelPropertiesByRequiredFlag": true,
            "sortParamsByRequiredFlag"         : true,
            "useBeanValidation"                : true,
            "enumPropertyNaming"               : "UPPERCASE",
    ])
}


sourceSets.main.kotlin.srcDirs += "${buildDir.path}/generated/src/main/kotlin"

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
