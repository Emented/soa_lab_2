import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
}

group = 'emented'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-web-services') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    jaxb("org.glassfish.jaxb:jaxb-xjc")
    implementation('wsdl4j:wsdl4j')
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation('org.springframework.boot:spring-boot-starter-hateoas') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.10.RELEASE'
    implementation 'com.orbitz.consul:consul-client:1.5.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.1.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer:4.1.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-config:4.1.1'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation("org.apache.httpcomponents.client5:httpclient5:5.2.1")

    implementation 'com.unboundid:unboundid-ldapsdk:7.0.1'


    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/kotlin'
            srcDir 'build/generated-sources/jaxb'
        }
    }
}


task genJaxb {
    ext.sourcesDir = "${buildDir.path}/generated-sources/jaxb"
    ext.schema = "src/main/resources/main.xsd"

    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
        }
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
