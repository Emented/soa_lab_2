version: '3.8'

services:
  consul:
    image: bitnami/consul
    container_name: consul
    ports:
      - 8500:8500
    networks:
      - backend

  organization-service-1:
    build: ./organization-service
    container_name: organization-service-1
    depends_on:
      - main-db
      - consul
    environment:
      - CONTAINER_NAME=organization-service-1
    networks:
      - backend
  
  organization-service-2:
    build: ./organization-service
    container_name: organization-service-2
    depends_on:
      - main-db
      - consul
    environment:
      - CONTAINER_NAME=organization-service-2
    networks:
      - backend

  # organization-service-3:
  #   build: ./organization-service
  #   container_name: organization-service-3
  #   depends_on:
  #     - main-db
  #     - consul
  #   environment:
  #     - CONTAINER_NAME=organization-service-3
  #   networks:
  #     - backend

  organization-service-haproxy:
    build: ./organization-service/haproxy
    depends_on:
      - organization-service-1
      - organization-service-2
    ports:
      - 8282:8080
      - 8181:8181
      - 8404:8404
    environment:
      - CONSUL_ADDRESS=consul:8500
    networks:
      - backend

  mule:
    build: ./manager-service/mule-esb
    container_name: mule
    platform: linux
    depends_on:
      - manager-service
    ports:
      - "8091:8081"
    networks:
      - backend

  manager-service-haproxy:
    build: ./manager-service/manager-haproxy
    container_name: manager-haproxy
    depends_on:
      - mule
    networks:
      - backend
    ports:
      - "9092:9091"
      - "8092:8080"

  manager-service:
    build: ./manager-service/manager-service
    container_name: manager-service
    depends_on:
      - organization-service-haproxy
      - eureka-server
      - config-server
    networks:
      - backend
    ports:
      - "8585:8080"
  
  eureka-server:
    build: ./manager-service/eureka-server
    container_name: eureka-server
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8761:8761"
    networks:
      - backend

  config-server:
    build: ./manager-service/config-server
    container_name: config-server
    ports:
      - "8095:8095"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8095/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - backend

  main-db:
    image: postgres
    container_name: main-db
    environment:
      POSTGRES_DB: "soa"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    command: postgres -p 5432
    volumes:
      - pg_data:/var/lib/postgresql
    networks:
      - backend
    ports:
      - "5433:5432"

networks:
  backend:
    driver: bridge

volumes:
  pg_data:
    driver: local
  consul_data:
    driver: local